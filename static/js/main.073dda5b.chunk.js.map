{"version":3,"sources":["dto/Person.js","components/Checkbox.js","components/Radio.js","components/InputComponent.js","components/PersonForm.js","components/PersonList.js","components/About.js","components/Nav.js","components/Home.js","index.js"],"names":["Person","firstName","lastName","email","age","currentRole","recommend","language","comments","id","this","currentUserRole","Checkbox","props","type","name","className","checked","onClick","value","Radio","title","onChange","InputComponent","htmlFor","placeholder","required","min","max","languageData","active","roles","recommendData","person","a","fetch","method","headers","body","JSON","stringify","promise","ok","alert","status","PersonForm","useState","setFirstName","setLastName","setEmail","setAge","setCurrentRole","recommendOption","setRecommendOption","setComments","setLanguage","handleLanguageChange","event","map","item","target","onSubmit","preventDefault","rest","reduce","result","ix","key","style","marginTop","reducer","state","action","splice","PersonList","listOfPersons","setListOfPersons","deleted","setDeleted","useEffect","useReducer","dispatch","json","handleDelete","restDelete","border","cellSpacing","About","Nav","color","href","to","Home","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.073dda5b.chunk.js","sourcesContent":["class Person {\r\n    constructor(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        age,\r\n        currentRole,\r\n        recommend,\r\n        language,\r\n        comments,\r\n        id=null) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.currentUserRole = currentRole;\r\n        this.recommend = recommend;\r\n        this.language = language;\r\n        this.comments = comments;\r\n    }\r\n}\r\n\r\nexport default Person;","import React from \"react\";\r\n\r\n\r\nfunction Checkbox(props) {\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input type=\"checkbox\" name=\"language\" className=\"filled-in\" checked={props.checked}\r\n                       onClick={props.onClick} value={props.value}/>\r\n                <span>{props.value}</span>\r\n            </label>\r\n        </p>\r\n    );\r\n}\r\nexport default Checkbox;","import React from \"react\";\r\n\r\n\r\nfunction Radio(props) {\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input value={props.title} name=\"group1\" type=\"radio\" onChange={props.onChange}\r\n                       checked={props.checked}/>\r\n                <span>{props.title}</span>\r\n            </label>\r\n        </p>);\r\n}\r\nexport default Radio;","import React from \"react\";\r\n\r\nfunction InputComponent(props) {\r\n    return (<div>\r\n        <label\r\n            id={props.id + \"-label\"}\r\n            htmlFor={props.id}>\r\n            {props.id}\r\n        </label>\r\n        <input id={props.id}\r\n               type={props.type}\r\n               placeholder={\"Enter your \" + props.id}\r\n               required\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               min={props.min}\r\n               max={props.max}\r\n        >\r\n        </input>\r\n    </div>);\r\n}\r\nexport default InputComponent;","import React, {useState} from 'react';\r\nimport Person from '../dto/Person';\r\nimport './PersonForm.css';\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport InputComponent from \"./InputComponent\";\r\n\r\nconst languageData = [\r\n    {title: 'Java', active: true},\r\n    {title: 'Java script', active: false},\r\n    {title: 'C++', active: false},\r\n];\r\n\r\nconst roles = ['Full time job', 'Student'];\r\n\r\nconst recommendData = [\r\n    {title: 'Yes'},\r\n    {title: 'No'},\r\n    {title: 'Maybe'},\r\n];\r\n\r\nasync function rest(person) {\r\n    // let url = `http://localhost:8080/employee`;\r\n    let url =\"https://server-side-form.herokuapp.com/employee\";\r\n    try {\r\n        let promise = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(person)\r\n        });\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Сохранено в БД\");\r\n        } else {\r\n            alert(\"Ошибка HTTP: \" + promise.status);\r\n        }\r\n    } catch (error) {\r\n        alert(\"Нет доступа к серверу\");\r\n    }\r\n}\r\n\r\nconst PersonForm = () => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [currentRole, setCurrentRole] = useState(roles[0]);\r\n    const [recommendOption, setRecommendOption] = useState(recommendData[0].title);\r\n    const [comments, setComments] = useState();\r\n    const [language, setLanguage] = useState(languageData);\r\n\r\n    function handleLanguageChange(event) {\r\n        setLanguage(language.map(item => item.title === event.target.value ? {\r\n            title: item.title,\r\n            active: !item.active\r\n        } : item));\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        let person = new Person(firstName,\r\n            lastName,\r\n            email,\r\n            age,\r\n            currentRole,\r\n            recommendOption,\r\n            language.reduce((result, item) => item.active ? result += item.title + \"; \" : result, \"\"),\r\n            comments);\r\n        rest(person);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} id=\"survey-form\">\r\n                <InputComponent value={firstName}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                                id=\"First Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={lastName}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                                id=\"Last Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                id=\"E-mail\"\r\n                                type=\"email\"/>\r\n                <InputComponent value={age}\r\n                                onChange={(event) => setAge(event.target.value)}\r\n                                id=\"Age(optional)\"\r\n                                min=\"10\"\r\n                                max=\"99\"\r\n                                type=\"number\"/>\r\n                <label id=\"select-label\"\r\n                       htmlFor=\"dropdown\">Which option best describes your current role?</label>\r\n                <select className=\"browser-default\"\r\n                        value={currentRole}\r\n                        onChange={(event) => setCurrentRole(event.target.value)}>\r\n                    {roles.map((item, ix) => <option key={ix} value={item}>{item}</option>)}\r\n                </select>\r\n\r\n                <label>\r\n                    Would you recommend our site to your friend?\r\n                </label>\r\n                {recommendData.map((item, ix) => <Radio key={ix}\r\n                                                        checked={item.title === recommendOption}\r\n                                                        title={item.title}\r\n                                                        onChange={(event) => {\r\n                                                            setRecommendOption(event.target.value)\r\n                                                        }}/>)}\r\n                <label>\r\n                    What language do you like to learn?\r\n                </label>\r\n                {language.map((item, ix) => <Checkbox key={ix} checked={item.active}\r\n                                                      value={item.title}\r\n                                                      onClick={handleLanguageChange}/>)}\r\n                < label htmlFor=\"comments\">\r\n                    Any comments or suggestions?\r\n                </label>\r\n                <textarea id=\"comments\"\r\n                          name=\"comments\"\r\n                          className=\"form-control\"\r\n                          value={comments}\r\n                          onChange={(event) => setComments(event.target.value)}>\r\n                    </textarea>\r\n                <div style={{marginTop: \"20px\"}}>\r\n                    <button id=\"submit\"\r\n                            type=\"submit\"\r\n                            className=\"btn\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React, {useEffect, useState, useReducer} from 'react';\r\nimport './PersonForm.css';\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'delete':\r\n            return [...state].splice(action.value,1);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nasync function restDelete(person) {\r\n    // let url = `http://localhost:8080/employee`;\r\n    let url = \"https://server-side-form.herokuapp.com/employee\";\r\n    try {\r\n        let promise = await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(person)\r\n        });\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Удалено из БД\");\r\n        } else {\r\n            switch (promise.status) {\r\n                case 404:\r\n                    alert(`Нет такого пользователя в БД: ${person.firstName} ${person.lastName}`);\r\n                    break;\r\n                default:\r\n                    alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        }\r\n    } catch (error) {\r\n        alert(\"Нет доступа к серверу\");\r\n    }\r\n}\r\n\r\nconst PersonList = () => {\r\n    const [listOfPersons, setListOfPersons] = useState([]);\r\n    const [deleted, setDeleted] = useState(false);\r\n    useEffect(() => {\r\n        rest();\r\n    }, []);\r\n    const [state, dispatch] = useReducer(reducer, listOfPersons);\r\n    // useEffect(() => {\r\n    //     rest();\r\n    // }, [deleted]);\r\n\r\n    async function rest() {\r\n        // let url = `http://localhost:8080/employeeList`;\r\n        let url = \"https://server-side-form.herokuapp.com/employeeList\";\r\n        try {\r\n            let promise = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                }\r\n            });\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                let json = await promise.json();\r\n                setListOfPersons(json);\r\n            } else {\r\n                alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        } catch (error) {\r\n            alert(\"Нет доступа к серверу\");\r\n        }\r\n    }\r\n\r\n    function handleDelete(event) {\r\n        setDeleted(!deleted);\r\n        restDelete(listOfPersons[event.target.value]);\r\n        dispatch({type: 'delete', value:event.target.value})\r\n        setListOfPersons(state)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>List of all persons</h2>\r\n            <div>\r\n                <table border=\"2\" cellSpacing=\"5\" className=\"highlight pd1\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last name</th>\r\n                        <th>E-mail</th>\r\n                        <th>Age</th>\r\n                        <th>Current role</th>\r\n                        <th>Recommend</th>\r\n                        <th>Language</th>\r\n                        <th>Comments</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listOfPersons.map((person, id) =>\r\n                        (<tr key={id}>\r\n                            <td>{person.firstName}</td>\r\n                            <td>{person.lastName}</td>\r\n                            <td>{person.email}</td>\r\n                            <td>{person.age}</td>\r\n                            <td>{person.currentUserRole}</td>\r\n                            <td>{person.recommend}</td>\r\n                            <td>{person.language}</td>\r\n                            <td>{person.comments}</td>\r\n                            <td>\r\n                                <button className=\"btn\" value={id} onClick={handleDelete}>delete</button>\r\n                            </td>\r\n                        </tr>)\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonList;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h3 id=\"title\">\r\n                This is a test application to check interactions with server\r\n            </h3>\r\n            <div>Press <u>Add person</u> to add a person into DB.\r\n            </div>\r\n            <div>\r\n            Press <u>List of persons</u> to get all persons from DB.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const style = {\r\n        color: \"white\"\r\n    };\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper  blue accent-1\">\r\n                <a href=\"/\" className=\"brand-logo\">Logo</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><Link to='/form' style={style}>\r\n                        Add person\r\n                    </Link></li>\r\n                    <li><Link to='/list' style={style}>\r\n                        List of persons\r\n                    </Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport PersonForm from \"./PersonForm\";\r\nimport PersonList from \"./PersonList\";\r\nimport About from \"./About\";\r\nimport Nav from \"./Nav\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n                <Nav/>\r\n                <Switch>\r\n                    <Route exact path='/' component={About}/>\r\n                    <Route path=\"/form\" component={PersonForm}/>\r\n                    <Route path=\"/list\" component={PersonList}/>\r\n                </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from \"./components/Home\";\r\nimport './index.css'\r\nimport 'materialize-css'\r\nimport {\r\n    BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Home/>\r\n    </Router>,\r\n    document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}