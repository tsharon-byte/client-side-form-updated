{"version":3,"sources":["components/Nav.js","components/About.js","dto/Person.js","components/Checkbox.js","components/InputComponent.js","components/PersonForm.js","components/PersonList.js","components/EmployeeListProvider.js","components/Home.js","index.js"],"names":["Nav","style","color","className","href","id","to","About","Person","firstName","lastName","email","age","language","sourceInformation","timeForProgramming","gender","this","Checkbox","props","type","name","checked","onClick","value","InputComponent","htmlFor","placeholder","required","onChange","min","max","languageData","title","active","person","a","url","process","fetch","method","headers","body","JSON","stringify","login","pwd","response","json","res","console","log","promise","ok","alert","status","PersonForm","useState","setFirstName","setLastName","setEmail","setAge","setLanguage","handleLanguageChange","event","map","item","target","onSubmit","preventDefault","rest","reduce","result","ix","key","marginTop","PersonList","employeeList","handleDelete","border","cellSpacing","currentUserRole","recommend","comments","EmployeeListProvider","setEmployeeList","deleted","setDeleted","restDelete","useEffect","Home","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.438f9e42.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './App.css'\r\n\r\nfunction Nav() {\r\n    const style = {\r\n        color: \"white\"\r\n    };\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper  blue accent-1\">\r\n                <a href=\"/\" className=\"brand-logo\">Logo</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><Link to='/form' style={style}>\r\n                        Add person\r\n                    </Link></li>\r\n                    <li><Link to='/list' style={style}>\r\n                        List of persons\r\n                    </Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h3 id=\"title\">\r\n                This is a test application to check interactions with server\r\n            </h3>\r\n            <div>Press <u>Add person</u> to add a person into DB.\r\n            </div>\r\n            <div>\r\n            Press <u>List of persons</u> to get all persons from DB.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","class Person {\r\n    constructor(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        age,\r\n        language,\r\n        sourceInformation,\r\n        timeForProgramming,\r\n        gender,\r\n        id = null) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.language = language;\r\n        this.sourceInformation = sourceInformation;\r\n        this.timeForProgramming = timeForProgramming;\r\n        this.gender = gender;\r\n    }\r\n}\r\n\r\nexport default Person;","import React from \"react\";\r\n\r\n\r\nfunction Checkbox(props) {\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input type=\"checkbox\" name=\"language\" className=\"filled-in\" checked={props.checked}\r\n                       onClick={props.onClick} value={props.value}/>\r\n                <span>{props.value}</span>\r\n            </label>\r\n        </p>\r\n    );\r\n}\r\nexport default Checkbox;","import React from \"react\";\r\n\r\nfunction InputComponent(props) {\r\n    return (<div>\r\n        <label\r\n            id={props.id + \"-label\"}\r\n            htmlFor={props.id}>\r\n            {props.id}\r\n        </label>\r\n        <input id={props.id}\r\n               type={props.type}\r\n               placeholder={\"Enter your \" + props.id}\r\n               required\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               min={props.min}\r\n               max={props.max}\r\n        >\r\n        </input>\r\n    </div>);\r\n}\r\nexport default InputComponent;","import React, {useState} from 'react';\r\nimport Person from '../dto/Person';\r\nimport './PersonForm.css';\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport InputComponent from \"./InputComponent\";\r\n\r\nconst languageData = [\r\n    {title: 'Java', active: true},\r\n    {title: 'Java script', active: false},\r\n    {title: 'C++', active: false},\r\n];\r\n\r\nconst roles = ['Full time job', 'Student'];\r\n\r\nconst recommendData = [\r\n    {title: 'Yes'},\r\n    {title: 'No'},\r\n    {title: 'Maybe'},\r\n];\r\n\r\nasync function rest(person) {\r\n    let url = `${process.env.REACT_APP_SERVER_URL}/employee`;\r\n    try {\r\n        let response = await fetch(`${process.env.REACT_APP_SERVER_URL}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({login:'login', pwd:'pwd'})\r\n        });\r\n        let res = await response.json();\r\n        console.log(res.id);\r\n        let promise = await fetch(`${url}/${res.id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(person)\r\n        });\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Сохранено в БД\");\r\n        } else {\r\n            alert(\"Ошибка HTTP: \" + promise.status);\r\n        }\r\n    } catch (error) {\r\n        alert(\"Нет доступа к серверу\");\r\n    }\r\n}\r\n\r\nconst PersonForm = () => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [language, setLanguage] = useState(languageData);\r\n\r\n    function handleLanguageChange(event) {\r\n        setLanguage(language.map(item => item.title === event.target.value ? {\r\n            title: item.title,\r\n            active: !item.active\r\n        } : item));\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        let person = new Person(firstName,\r\n            lastName,\r\n            email,\r\n            age,\r\n            language.reduce((result, item) => item.active ? result += item.title + \"; \" : result, \"\"),\r\n            'sourceInformation',\r\n            'timeForProgramming',\r\n            'gender',\r\n            );\r\n        rest(person);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} id=\"survey-form\">\r\n                <InputComponent value={firstName}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                                id=\"First Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={lastName}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                                id=\"Last Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                id=\"E-mail\"\r\n                                type=\"email\"/>\r\n                <InputComponent value={age}\r\n                                onChange={(event) => setAge(event.target.value)}\r\n                                id=\"Age(optional)\"\r\n                                min=\"10\"\r\n                                max=\"99\"\r\n                                type=\"number\"/>\r\n                <label id=\"select-label\"\r\n                       htmlFor=\"dropdown\">Which option best describes your current role?</label>\r\n                <label>\r\n                    What language do you like to learn?\r\n                </label>\r\n                {language.map((item, ix) => <Checkbox key={ix} checked={item.active}\r\n                                                      value={item.title}\r\n                                                      onClick={handleLanguageChange}/>)}\r\n                < label htmlFor=\"comments\">\r\n                    Any comments or suggestions?\r\n                </label>\r\n                <div style={{marginTop: \"20px\"}}>\r\n                    <button id=\"submit\"\r\n                            type=\"submit\"\r\n                            className=\"btn\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nimport './PersonForm.css';\r\n\r\nconst PersonList = ({employeeList, handleDelete}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>List of all persons</h2>\r\n            <div>\r\n                <table border=\"2\" cellSpacing=\"5\" className=\"highlight pd1\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last name</th>\r\n                        <th>E-mail</th>\r\n                        <th>Age</th>\r\n                        <th>Current role</th>\r\n                        <th>Recommend</th>\r\n                        <th>Language</th>\r\n                        <th>Comments</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {employeeList.map(person =>\r\n                        (<tr key={person.id}>\r\n                            <td>{person.firstName}</td>\r\n                            <td>{person.lastName}</td>\r\n                            <td>{person.email}</td>\r\n                            <td>{person.age}</td>\r\n                            <td>{person.currentUserRole}</td>\r\n                            <td>{person.recommend}</td>\r\n                            <td>{person.language}</td>\r\n                            <td>{person.comments}</td>\r\n                            <td>\r\n                                <button className=\"btn\" value={person.id} onClick={handleDelete}>delete</button>\r\n                            </td>\r\n                        </tr>)\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonList;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PersonList from \"./PersonList\";\r\n\r\nconst EmployeeListProvider = () => {\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const [deleted, setDeleted] = useState(false);\r\n    useEffect(() => {\r\n        rest();\r\n    }, [deleted]);\r\n\r\n    async function handleDelete(event) {\r\n        await restDelete(event.target.value);\r\n        setDeleted(!deleted);\r\n    }\r\n\r\n    async function restDelete(id) {\r\n        let url = `${process.env.REACT_APP_SERVER_URL}/employee?employee_id=${id}&manager_id=6a46bff5-9fcd-4e7e-8099-36820543213a`;\r\n        try {\r\n            let promise = await fetch(url, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                }\r\n            });\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                alert(\"Удалено из БД\");\r\n            } else {\r\n                switch (promise.status) {\r\n                    case 404:\r\n                        alert(`Нет такого пользователя в БД: ${id}`);\r\n                        break;\r\n                    default:\r\n                        alert(\"Ошибка HTTP: \" + promise.status);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(\"Нет доступа к серверу\");\r\n        }\r\n    }\r\n    async function rest() {\r\n        let url = `${process.env.REACT_APP_SERVER_URL}/manager/6a46bff5-9fcd-4e7e-8099-36820543213a`;\r\n        try {\r\n            let promise = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                }\r\n            });\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                let json = await promise.json();\r\n                setEmployeeList(json);\r\n            } else {\r\n                alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        } catch (error) {\r\n            alert(\"Нет доступа к серверу\");\r\n        }\r\n    }\r\n\r\n    return <PersonList employeeList={employeeList} handleDelete={handleDelete}/>\r\n};\r\nexport default EmployeeListProvider;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nimport Nav from './Nav';\r\nimport About from './About';\r\nimport PersonForm from './PersonForm';\r\nimport EmployeeListProvider from './EmployeeListProvider';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n            <Nav/>\r\n            <Switch>\r\n                <Route exact path='/' component={About}/>\r\n                <Route path=\"/form\" component={PersonForm}/>\r\n                <Route path=\"/list\" component={EmployeeListProvider}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport 'materialize-css';\r\n\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport Home from \"./components/Home\";\r\n\r\nReactDOM.render(\r\n    <Home/>,\r\n    document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}