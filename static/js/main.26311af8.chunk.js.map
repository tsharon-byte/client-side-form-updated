{"version":3,"sources":["components/Nav.js","components/About.js","dto/Person.js","components/Checkbox.js","components/Radio.js","components/InputComponent.js","components/PersonForm.js","components/PersonList.js","components/EmployeeListProvider.js","components/Home.js","index.js"],"names":["Nav","style","color","className","href","id","to","About","Person","firstName","lastName","email","age","currentRole","recommend","language","comments","this","currentUserRole","Checkbox","props","type","name","checked","onClick","value","Radio","title","onChange","InputComponent","htmlFor","placeholder","required","min","max","languageData","active","roles","recommendData","person","a","url","process","fetch","method","headers","body","JSON","stringify","promise","ok","alert","status","PersonForm","useState","setFirstName","setLastName","setEmail","setAge","setCurrentRole","recommendOption","setRecommendOption","setComments","setLanguage","handleLanguageChange","event","map","item","target","onSubmit","preventDefault","rest","reduce","result","ix","key","marginTop","PersonList","employeeList","handleDelete","border","cellSpacing","EmployeeListProvider","setEmployeeList","deleted","setDeleted","restDelete","json","useEffect","Home","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26311af8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './App.css'\r\n\r\nfunction Nav() {\r\n    const style = {\r\n        color: \"white\"\r\n    };\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper  blue accent-1\">\r\n                <a href=\"/\" className=\"brand-logo\">Logo</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><Link to='/form' style={style}>\r\n                        Add person\r\n                    </Link></li>\r\n                    <li><Link to='/list' style={style}>\r\n                        List of persons\r\n                    </Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h3 id=\"title\">\r\n                This is a test application to check interactions with server\r\n            </h3>\r\n            <div>Press <u>Add person</u> to add a person into DB.\r\n            </div>\r\n            <div>\r\n            Press <u>List of persons</u> to get all persons from DB.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","class Person {\r\n    constructor(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        age,\r\n        currentRole,\r\n        recommend,\r\n        language,\r\n        comments,\r\n        id=null) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.currentUserRole = currentRole;\r\n        this.recommend = recommend;\r\n        this.language = language;\r\n        this.comments = comments;\r\n    }\r\n}\r\n\r\nexport default Person;","import React from \"react\";\r\n\r\n\r\nfunction Checkbox(props) {\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input type=\"checkbox\" name=\"language\" className=\"filled-in\" checked={props.checked}\r\n                       onClick={props.onClick} value={props.value}/>\r\n                <span>{props.value}</span>\r\n            </label>\r\n        </p>\r\n    );\r\n}\r\nexport default Checkbox;","import React from \"react\";\r\n\r\n\r\nfunction Radio(props) {\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input value={props.title} name=\"group1\" type=\"radio\" onChange={props.onChange}\r\n                       checked={props.checked}/>\r\n                <span>{props.title}</span>\r\n            </label>\r\n        </p>);\r\n}\r\nexport default Radio;","import React from \"react\";\r\n\r\nfunction InputComponent(props) {\r\n    return (<div>\r\n        <label\r\n            id={props.id + \"-label\"}\r\n            htmlFor={props.id}>\r\n            {props.id}\r\n        </label>\r\n        <input id={props.id}\r\n               type={props.type}\r\n               placeholder={\"Enter your \" + props.id}\r\n               required\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               min={props.min}\r\n               max={props.max}\r\n        >\r\n        </input>\r\n    </div>);\r\n}\r\nexport default InputComponent;","import React, {useState} from 'react';\r\nimport Person from '../dto/Person';\r\nimport './PersonForm.css';\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport InputComponent from \"./InputComponent\";\r\n\r\nconst languageData = [\r\n    {title: 'Java', active: true},\r\n    {title: 'Java script', active: false},\r\n    {title: 'C++', active: false},\r\n];\r\n\r\nconst roles = ['Full time job', 'Student'];\r\n\r\nconst recommendData = [\r\n    {title: 'Yes'},\r\n    {title: 'No'},\r\n    {title: 'Maybe'},\r\n];\r\n\r\nasync function rest(person) {\r\n    let url = `${process.env.REACT_APP_SERVER_URL}/employee`;\r\n    try {\r\n        let promise = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(person)\r\n        });\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Сохранено в БД\");\r\n        } else {\r\n            alert(\"Ошибка HTTP: \" + promise.status);\r\n        }\r\n    } catch (error) {\r\n        alert(\"Нет доступа к серверу\");\r\n    }\r\n}\r\n\r\nconst PersonForm = () => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [currentRole, setCurrentRole] = useState(roles[0]);\r\n    const [recommendOption, setRecommendOption] = useState(recommendData[0].title);\r\n    const [comments, setComments] = useState();\r\n    const [language, setLanguage] = useState(languageData);\r\n\r\n    function handleLanguageChange(event) {\r\n        setLanguage(language.map(item => item.title === event.target.value ? {\r\n            title: item.title,\r\n            active: !item.active\r\n        } : item));\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        let person = new Person(firstName,\r\n            lastName,\r\n            email,\r\n            age,\r\n            currentRole,\r\n            recommendOption,\r\n            language.reduce((result, item) => item.active ? result += item.title + \"; \" : result, \"\"),\r\n            comments);\r\n        rest(person);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} id=\"survey-form\">\r\n                <InputComponent value={firstName}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                                id=\"First Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={lastName}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                                id=\"Last Name\"\r\n                                type=\"text\"/>\r\n                <InputComponent value={email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                id=\"E-mail\"\r\n                                type=\"email\"/>\r\n                <InputComponent value={age}\r\n                                onChange={(event) => setAge(event.target.value)}\r\n                                id=\"Age(optional)\"\r\n                                min=\"10\"\r\n                                max=\"99\"\r\n                                type=\"number\"/>\r\n                <label id=\"select-label\"\r\n                       htmlFor=\"dropdown\">Which option best describes your current role?</label>\r\n                <select className=\"browser-default\"\r\n                        value={currentRole}\r\n                        onChange={(event) => setCurrentRole(event.target.value)}>\r\n                    {roles.map((item, ix) => <option key={ix} value={item}>{item}</option>)}\r\n                </select>\r\n\r\n                <label>\r\n                    Would you recommend our site to your friend?\r\n                </label>\r\n                {recommendData.map((item, ix) => <Radio key={ix}\r\n                                                        checked={item.title === recommendOption}\r\n                                                        title={item.title}\r\n                                                        onChange={(event) => {\r\n                                                            setRecommendOption(event.target.value)\r\n                                                        }}/>)}\r\n                <label>\r\n                    What language do you like to learn?\r\n                </label>\r\n                {language.map((item, ix) => <Checkbox key={ix} checked={item.active}\r\n                                                      value={item.title}\r\n                                                      onClick={handleLanguageChange}/>)}\r\n                < label htmlFor=\"comments\">\r\n                    Any comments or suggestions?\r\n                </label>\r\n                <textarea id=\"comments\"\r\n                          name=\"comments\"\r\n                          className=\"form-control\"\r\n                          value={comments}\r\n                          onChange={(event) => setComments(event.target.value)}>\r\n                    </textarea>\r\n                <div style={{marginTop: \"20px\"}}>\r\n                    <button id=\"submit\"\r\n                            type=\"submit\"\r\n                            className=\"btn\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nimport './PersonForm.css';\r\n\r\nconst PersonList = ({employeeList, handleDelete}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>List of all persons</h2>\r\n            <div>\r\n                <table border=\"2\" cellSpacing=\"5\" className=\"highlight pd1\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last name</th>\r\n                        <th>E-mail</th>\r\n                        <th>Age</th>\r\n                        <th>Current role</th>\r\n                        <th>Recommend</th>\r\n                        <th>Language</th>\r\n                        <th>Comments</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {employeeList.map(person =>\r\n                        (<tr key={person.id}>\r\n                            <td>{person.firstName}</td>\r\n                            <td>{person.lastName}</td>\r\n                            <td>{person.email}</td>\r\n                            <td>{person.age}</td>\r\n                            <td>{person.currentUserRole}</td>\r\n                            <td>{person.recommend}</td>\r\n                            <td>{person.language}</td>\r\n                            <td>{person.comments}</td>\r\n                            <td>\r\n                                <button className=\"btn\" value={person.id} onClick={handleDelete}>delete</button>\r\n                            </td>\r\n                        </tr>)\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonList;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PersonList from \"./PersonList\";\r\n\r\nconst EmployeeListProvider = () => {\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const [deleted, setDeleted] = useState(false);\r\n    useEffect(() => {\r\n        rest();\r\n    }, [deleted]);\r\n\r\n    async function handleDelete(event) {\r\n        await restDelete(event.target.value);\r\n        setDeleted(!deleted);\r\n    }\r\n\r\n    async function restDelete(id) {\r\n        let url = `${process.env.REACT_APP_SERVER_URL}/employee/${id}`;\r\n        try {\r\n            let promise = await fetch(url, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                }\r\n            });\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                alert(\"Удалено из БД\");\r\n            } else {\r\n                switch (promise.status) {\r\n                    case 404:\r\n                        alert(`Нет такого пользователя в БД: ${id}`);\r\n                        break;\r\n                    default:\r\n                        alert(\"Ошибка HTTP: \" + promise.status);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(\"Нет доступа к серверу\");\r\n        }\r\n    }\r\n    async function rest() {\r\n        let url = `${process.env.REACT_APP_SERVER_URL}/employeeList`;\r\n        try {\r\n            let promise = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                }\r\n            });\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                let json = await promise.json();\r\n                setEmployeeList(json);\r\n            } else {\r\n                alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        } catch (error) {\r\n            alert(\"Нет доступа к серверу\");\r\n        }\r\n    }\r\n\r\n    return <PersonList employeeList={employeeList} handleDelete={handleDelete}/>\r\n};\r\nexport default EmployeeListProvider;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nimport Nav from './Nav';\r\nimport About from './About';\r\nimport PersonForm from './PersonForm';\r\nimport EmployeeListProvider from './EmployeeListProvider';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n            <Nav/>\r\n            <Switch>\r\n                <Route exact path='/' component={About}/>\r\n                <Route path=\"/form\" component={PersonForm}/>\r\n                <Route path=\"/list\" component={EmployeeListProvider}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport 'materialize-css';\r\n\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport Home from \"./components/Home\";\r\n\r\nReactDOM.render(\r\n    <Home/>,\r\n    document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}